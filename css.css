/* <!-- 1. Style all <h1> tags with blue text and bottom border            
    Create a CSS rule to style all <h1> tags with blue text and a bottom border. --> */
    
h1 {
    color : blue;
    border-bottom: 2px solid black;
}



/* <!-- 2. Center a div horizontally and vertically using Flexbox   
 Center a div horizontally and vertically using Flexbox.--> */

.parent {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}









/* <!-- 3. Responsive navigation bar with hamburger (mobile)          
 Create a responsive navigation bar that collapses into a hamburger menu on mobile.   --> */ */

.navbar {
    display: flex;
    justify-content: space-between;
    background-color: aliceblue;
    align-items: center;
    padding: 10px 20px;
}

.nav-links {
    display: flex;
    justify-content: space-between;
    /* background-color: gray; */
    list-style: none;
}

.nav-links li {
    margin: 0 15px;
}

.nav-links a {
  text-decoration: none;
  color: black;
  transition: color 0.3s;
}

.nav-links a:hover {
  color: blue;
}

.hamburger {
    display: none;
    padding: 5px;
}

@media (max-width : 768px) {
    .nav-links {
        display: none
    }

    .hamburger {
        display: block;
        cursor: pointer;
    }
}





/* <!-- 4. Card component (Image, title, description, button + hover scale)      
    Design a card component with:
    Image, title, description, and a button.
    Add a hover effect that scales the card.  --> */

.card {
    display: flex;
    flex-direction: column;
    max-width: 300px;
    background-color: antiquewhite;
    padding: 5px;
    transition: transform 0.3s;
    text-align: center;
}

/* ------------------------------------- */
.card:hover {
    transform: scale(1.05);
    /* transition: transform 0.3s; */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.card img {
  width: 100%;
  height: auto; /* keeps image ratio */
  margin-bottom: 10px;
}

.card h2 {
  margin: 10px 0 5px;
}

.card p {
  margin-bottom: 10px;
}

.card button {
  padding: 8px 15px;
  border: none;
  background-color: #3498db;
  color: white;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.card button:hover {
  background-color: #2980b9;
}







/* <!-- 5. Dropdown menu (pure CSS, no JS)      
 Create a dropdown menu using pure CSS (no JavaScript).  --> */

 /* Dropdown container */
.dropdown {
    position: relative;
    display: inline-block;
}

/* Button styling */
.dropbtn {
    background-color: #3498db;
    color: white;
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    border-radius: 5px;
}

/* Dropdown content (hidden by default) */
.dropdown-content {
    display: none;
    position: absolute;
    background-color: white;
    min-width: 150px;
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
    border-radius: 5px;
    z-index: 1;
}

/* Links inside the dropdown */
.dropdown-content a {
    color: black;
    padding: 10px 15px;
    text-decoration: none;
    display: block;
}

/* Hover effects for links */
.dropdown-content a:hover {
    background-color: #f1f1f1;
}

/* Show dropdown when hovered */
.dropdown:hover .dropdown-content{
    display: block;
}

/* Change button color on hover */
.dropdown:hover .dropbtn {
    background-color: #2980b9;
}


















/* <!-- 6. Responsive grid layout (3 columns desktop â†’ 1 column mobile) 
       Build a responsive grid layout using CSS Grid wit */

.grid-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
}


@media (max-width : 720px) {
    .grid-container {
        grid-template-columns: 1fr;
        gap: 10px;
    }
}




















/* <!-- 7. Styled form (rounded borders, background, focus effect)          
 Style a form with:
Rounded borders, background color, and a focus effect.     --> */

.my-form {
    border: 2px solid black;
    border-radius: 20px;
    padding: 50px;
    background-color: aliceblue;
}

.my-form input:focus {
    border: 5px solid bisque;
}








/* <!-- 8. Loading spinner (CSS animations) 
    Create a loading spinner using CSS animations. --> */

.spinner {
    transform: spinner;
}










/* <!-- 9. Footer with 3 columns (About, Links, Contact) 
    Design a footer with 3 columns (About, Links, Contact) using Flexbox. --> */

.footer {
    display: flex;
    flex-direction: row;
    width: 100%;
}








/* <!-- 10. Sticky header 
    Create a sticky header that remains fixed at the top while scrolling. --> */

.header {
    position: sticky;
}